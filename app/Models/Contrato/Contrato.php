<?php

namespace App\Models\Contrato;

use App\Models\Atividades\Atividades;
use App\Models\Estoque\Produtos;
use App\Models\Geral\Clientes;
use App\Models\Geral\Notificacoes;
use App\Models\Geral\Usuarios;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

/**
 * Class Aulas
 *
 * @package App\Models\Contrato
 * @mixin \Eloquent
 */
class Contrato extends Model
{
    protected $primaryKey = 'id';

    protected $table = 'contrato_contrato';

    public $timestamps = false;

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($novoContrato) {

            $controle =  Carbon::now()->format('dmY');

            $lastId = \DB::table('contrato_contrato')
                ->whereMesDiaControle($controle)
                ->max('digito_controle');

            $novoContrato->mes_dia_controle = $controle;
            $novoContrato->digito_controle = (int)$lastId + 1;
            $novoContrato->codigo_contrato = 'CT'.$controle.'-'.($lastId + 1);

            /**
             * Alimenta o canal de notificacoes
             * Envia uma notificacao para moderador novos prÃ©-contratos
             */
            Notificacoes::registrarNotificacao("Contrato", "Novo contrato anexada de NÂº{$novoContrato->codigo_contrato}", $novoContrato->id_proposta);

            return $novoContrato;

        });
    }

    public static function verificaStatusContrato($preContratoId)
    {
        return self::query()
            ->where('pre_contrato_id', $preContratoId)
            ->first();
    }

    public static function verificaContrato($contrato){

        return self::where('id', $contrato)->first();
    }
}

