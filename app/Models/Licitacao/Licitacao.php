<?php

namespace App\Models\Licitacao;

use App\Models\Atividades\Atividades;
use App\Models\Contrato\PreContrato;
use App\Models\Geral\Clientes;
use App\Models\Geral\Notificacoes;
use App\Models\Geral\Usuarios;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

/**
 * Class Aulas
 *
 * @package App\Models\Licitacao
 * @mixin \Eloquent
 */
class Licitacao extends Model
{
    protected $primaryKey = 'id';

    protected $table = 'licitacao_licitacao';

    public $timestamps = false;

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($novaLicitacao) {

            $controle =  Carbon::now()->format('dmY');

            $lastId = \DB::table('licitacao_licitacao')
                ->whereMesDiaControle($controle)
                ->max('digito_controle');

            $novaLicitacao->mes_dia_controle = $controle;
            $novaLicitacao->digito_controle = (int)$lastId + 1;
            $novaLicitacao->codigo_licitacao = 'LC'.$controle.'-'.($lastId + 1);

            /**
             * Alimenta o canal de notificacoes
             * Envia uma notificacao para moderador novos pré-contratos
             */
            Notificacoes::registrarNotificacao("Licitação", "Nova licitação Nº{$novaLicitacao->codigo_licitacao} foi criado", $novaLicitacao->id_contratante);

            return $novaLicitacao;

        });
    }

    public static function buscaLicitacaoPorId($idLicitacao)
    {
        return self::query()
            ->where('id', '=', $idLicitacao)
            ->first();
    }

    public function contratantes()
    {
        return $this->hasOne(Clientes::class, 'id', 'id_contratante');
    }

    public function precontratos()
    {
        return $this->hasOne(PreContrato::class, 'id_licitacao', 'id');
    }
}

